name: Terraform Plan & Apply On Successful PR

on:
  workflow_call:
    secrets:
      TERRAFORM_GITHUB_OWNER:
        description: "This is the target GitHub organization, used by terraform github provider"
        required: false

      TERRAFORM_GITHUB_TOKEN:
        description: "This is the target GitHub token, used by terraform github provider"
        required: false

      STAKATER_GITHUB_TOKEN:
        description: "GitHub token to write a message on the PR if workflow failed"
        required: true

      SSH_PRIVATE_KEY:
        description: "SSH Key to auth for fetch terraform modules from github"
        required: true

      TF_API_TOKEN:
        description: "Terraform api token"
        required: true

      SLACK_WEBHOOK_URL:
        description: "Secret to send success/failure message to slack"
        required: true

env:
  GITHUB_OWNER: ${{ secrets.TERRAFORM_GITHUB_OWNER }}
  GITHUB_TOKEN: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  terraform-plan-or-apply-on-main:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Init module auth
      run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"

    - uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate

    - name: Terraform Plan No Lock
      id: plan-no-lock
      if: github.event_name == 'pull_request'
      run: terraform plan -lock=false

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'push'
      run: terraform plan -out=tf.plan

    - name: Terraform Apply
      id: apply
      if: github.event_name == 'push'
      run: terraform apply tf.plan

    - name: Notify Failure
      if: failure()
      uses: mshick/add-pr-comment@v2
      env:
        GITHUB_TOKEN: ${{ secrets.STAKATER_GITHUB_TOKEN }}
      with:
        message: '@${{ github.actor }} Pipeline execution has failed! Please check latest actions before proceeding.'
        allow-repeats: false

    - name: Notify Slack
      uses: 8398a7/action-slack@v3.16.2
      if: always() # Pick up events even if the job fails or is canceled.
      with:
        status: ${{ job.status }}
        fields: repo,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
