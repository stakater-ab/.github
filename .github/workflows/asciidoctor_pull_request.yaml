name: Pull Request

on:
  workflow_call:
    inputs:
      document:
        description: 'The path to the root of the document'
        required: true
        type: string
      spell_check_language:
        description: 'Spell check language for LanguageTool'
        required: false
        type: string
        default: 'en-US'
      vale_config:
        description: 'A file path for a Vale config'
        required: false
        type: string
        default: '.vale.ini'
    secrets:
      STAKATER_GITHUB_TOKEN:
        description: "Token for GitHub Container Registry authentication"
        required: true

jobs:
  link_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run linkspector
        uses: umbrelladocs/action-linkspector@v1
        with:
          github_token: ${{ secrets.STAKATER_GITHUB_TOKEN }}
          reporter: github-pr-review
          fail_on_error: true
          filter_mode: nofilter

  spell_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Vale
        run: |
          wget https://github.com/errata-ai/vale/releases/download/v3.0.5/vale_3.0.5_Linux_64-bit.tar.gz -O vale.tar.gz
          tar -xvzf vale.tar.gz vale
          rm vale.tar.gz
      - name: Install Asciidoctor
        run: sudo apt-get install -y asciidoctor
      - name: Spell check
        run: |
          if [ "${{ inputs.vale_config }}" == ".vale.ini" ]; then
            ./vale sync
          else
            cd ${{ inputs.document }}
            ../vale sync
            cd ..
          fi
          ./vale --config='${{ inputs.vale_config }}' ${{ inputs.document }}/content

  style_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Style check
        uses: reviewdog/action-languagetool@v1
        with:
          github_token: ${{secrets.STAKATER_GITHUB_TOKEN}}
          reporter: github-pr-review
          level: error
          language: ${{ inputs.spell_check_language }}
          patterns: ${{ inputs.document }}/**/*.adoc

  generate_pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source files
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Generate PDF
        run: |
          cd $GITHUB_WORKSPACE/${{ inputs.document }}/ && ./generate-pdf -o PR${{ github.event.number }}
      - name: Upload generated PDF
        uses: actions/upload-artifact@v4
        with:
          name: PR${{ github.event.number }}.pdf
          path: ${{ github.workspace }}/${{ inputs.document }}/PR${{ github.event.number }}.pdf
          retention-days: 5
          if-no-files-found: error
